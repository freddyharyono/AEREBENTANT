package aerebenant;


import java.util.StringTokenizer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author edy
 */
public final class HillChipper extends javax.swing.JFrame {
    private static final int m = 26;
    private final int[][] M = new int[2][2];
    private final int[][] N = new int[2][2];
    private final int p[] = new int[100];
    private final int c[] = new int[100];
    char[] f = new char[100];
    /**
     * Creates new form HillChipper
     */
    public HillChipper() {
        initComponents();
        kontrolTbl();
    } 
     
    private static int tambah(int a, int b) {
    return (a + b) % m;
    }
    private static int kali(int a, int b) {
    return (a * b) % m;
    }
    private static int inversTambah(int a) {
    return (m - a);
    }
    private static int inversKali(int a) {
    int hasil = -1;
    for (int i = 1; i < m; i++) {
    if (((a * i) % m) == 1) {
    hasil = i;
    }
 }
    return hasil;
 }
    private static boolean adaInvers(int a) {
    boolean hasil = false;
    for (int i = 1; i < m; i++) {
    if (((a * i) % m) == 1) {
    hasil = true;
  }
 }
    return hasil;
 }
     public void GetM() {
    M[0][0] = Integer.parseInt(k1.getText());
    M[0][1] = Integer.parseInt(k2.getText());
    M[1][0] = Integer.parseInt(k3.getText());
    M[1][1] = Integer.parseInt(k4.getText());
 }
 
    public int[][] setKunci() {
    int K[][] = {
    {Integer.parseInt(k1.getText()),
    Integer.parseInt(k2.getText())},
    {Integer.parseInt(k3.getText()),
    Integer.parseInt(k4.getText())}
 };
    return this.M;
 }
    public int[][] setKunciInvers() {
    int K[][] = {
    {Integer.parseInt(k4.getText()), -
    Integer.parseInt(k2.getText())},
    {-Integer.parseInt(k3.getText()),
    Integer.parseInt(k1.getText())}
 };
    return this.N;
 }
    private static boolean CekDeterminan(int[][] M) {
    int x = (M[0][0] * M[1][1]) % 26;
    int y = (M[0][1] * M[1][0]) % 26;
    int z = tambah(x, inversTambah(y));
    return adaInvers(z);
 }
    public void kontrolTbl() {
    TombolEnkripsi.setEnabled(false);
    TombolDekripsi.setEnabled(false);
    plainteks.setEnabled(false);
    chipperteks.setEnabled(false); 
    hasildekripsi.setEnabled(false);
 }
    public void enablebtn() {
    TombolEnkripsi.setEnabled(true);
    TombolDekripsi.setEnabled(true);
    plainteks.setEnabled(true);
    chipperteks.setEnabled(true); 
    hasildekripsi.setEnabled(true);
 }
 
    private int[] enkrip(int[][] M, int[] p) {
    String str;
    str = plainteks.getText(); // mengambil nilai string
    int i = 0;
    int zz = 0;
    for (int b = 0; b < str.length() / 2; b++) {
    for (int j = 0; j < 2; j++) {
    for (int x = 0; x < 2; x++) {
    c[i] += M[j][x] * p[x + zz]; 
// mengalikan kunci dengan nilai konversi huruf ke angka
 }
    i++;
 }
    zz += 2;
 }
    return c;
 }
 
    private int[] dekrip(int[][] N, int[] c) {
    String Btr;
    Btr = chipperteks.getText();
    int i = 0;
    int zz = 0;
    for (int b = 0; b < Btr.length() / 2; b++) {
    for (int j = 0; j < 2; j++) {
    for (int x = 0; x < 2; x++) {
    p[i] += N[j][x] * c[x + zz];
 }
    i++;
 }
    zz += 2;
 }
    return p;
 }
    public int[] setP() {
    String str;
    int i;
    str = plainteks.getText();
    for (i = 0; i < str.length(); i++) {
    int c1 = str.charAt(i);
    p[i] = (c1) - 65;
// Mengisi array p dengan konversi String menjadi
//bilangan integer
//untuk huruf kecil menggunakan angka 97
 }
    return p;
 }
 
    public int[] setC() {
    String str;
    int i; 
    str = plainteks.getText();
    for (i = 0; i < str.length(); i++) {
    int p1 = str.charAt(i);
    c[i] = (p1) - 65;
// Mengisi array p dengan konversi String menjadi
//bilangan integer
 //untuk huruf kecil menggunakan angka 97
  }
    return c;
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CekKunci = new javax.swing.JLabel();
        k3 = new javax.swing.JTextField();
        k1 = new javax.swing.JTextField();
        k2 = new javax.swing.JTextField();
        k4 = new javax.swing.JTextField();
        hasilkunci = new javax.swing.JLabel();
        PlainTeks = new javax.swing.JLabel();
        ChipperTeks = new javax.swing.JLabel();
        TombolEnkripsi = new javax.swing.JToggleButton();
        TombolDekripsi = new javax.swing.JToggleButton();
        plainteks = new javax.swing.JTextField();
        hasildekripsi = new javax.swing.JTextField();
        TombolCek = new javax.swing.JButton();
        HapusKunci = new javax.swing.JButton();
        HapusTeks = new javax.swing.JButton();
        chipperteks = new javax.swing.JTextField();
        Dekripsi = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        JumlahKarakter = new javax.swing.JLabel();
        Karakter = new javax.swing.JLabel();
        JumlahKata = new javax.swing.JLabel();
        Kata = new javax.swing.JLabel();
        JumlahBit = new javax.swing.JLabel();
        Bit = new javax.swing.JLabel();
        menuutama = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CekKunci.setText("Cek Kunci");

        hasilkunci.setText("HasilKunci");

        PlainTeks.setText("Plaintext");

        ChipperTeks.setText("Chipper Text");

        TombolEnkripsi.setText("Enkripsi");
        TombolEnkripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolEnkripsiActionPerformed(evt);
            }
        });

        TombolDekripsi.setText("Deskripsi");
        TombolDekripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolDekripsiActionPerformed(evt);
            }
        });

        plainteks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plainteksActionPerformed(evt);
            }
        });

        hasildekripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasildekripsiActionPerformed(evt);
            }
        });

        TombolCek.setText("Cek");
        TombolCek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TombolCekActionPerformed(evt);
            }
        });

        HapusKunci.setText("Hapus Kunci");
        HapusKunci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusKunciActionPerformed(evt);
            }
        });

        HapusTeks.setText("Hapus Teks");
        HapusTeks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusTeksActionPerformed(evt);
            }
        });

        Dekripsi.setText("Dekripsi");

        jLabel7.setText("Kriptografi Teks dengan Hill Chipper");

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        JumlahKarakter.setText("Karakter : ");

        Karakter.setText("0");

        JumlahKata.setText("Kata : ");

        Kata.setText("0");

        JumlahBit.setText("Bit : ");

        Bit.setText("0");

        menuutama.setText("Menu Utama");
        menuutama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuutamaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(hasilkunci)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(JumlahBit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Bit))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(PlainTeks)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(JumlahKarakter)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Karakter, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(JumlahKata)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Kata))
                                    .addComponent(CekKunci))
                                .addGap(46, 46, 46)
                                .addComponent(Exit)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChipperTeks)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(hasildekripsi, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                                .addComponent(chipperteks)
                                .addComponent(plainteks))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(k1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(k3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(k4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(HapusKunci))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(k2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(TombolCek))))
                            .addComponent(Dekripsi)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TombolEnkripsi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TombolDekripsi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(HapusTeks))
                            .addComponent(menuutama))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CekKunci)
                    .addComponent(Exit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(k1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(k2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TombolCek))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(k4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(k3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HapusKunci))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hasilkunci)
                    .addComponent(JumlahBit)
                    .addComponent(Bit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlainTeks)
                    .addComponent(JumlahKarakter)
                    .addComponent(Karakter)
                    .addComponent(JumlahKata)
                    .addComponent(Kata))
                .addGap(1, 1, 1)
                .addComponent(plainteks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ChipperTeks)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chipperteks, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Dekripsi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hasildekripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TombolEnkripsi)
                    .addComponent(TombolDekripsi)
                    .addComponent(HapusTeks))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(menuutama)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TombolEnkripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolEnkripsiActionPerformed
        // TODO add your handling code here: 
    setP();  
    String str;
    int jkt = plainteks.getText().length();
    str = plainteks.getText();
    StringTokenizer jkk = new StringTokenizer(plainteks.getText());
    int jkk2 = jkk.countTokens();
    Karakter.setText(Integer.toString(jkt));
    Kata.setText(Integer.toString(jkk2));
    Bit.setText(Integer.toString(jkt*8));
    enkrip(M, p);
    for (int z = 0; z < str.length(); z++) {
    f[z] = (char) ((c[z] % 26) + 65); // untuk huruf kecil
//menggunakn angka 97
 }
    String s = new String(f).trim();
    System.out.println("Hasil Enkripsi menjadi string =" + s);
    chipperteks.setText(s); 
    }//GEN-LAST:event_TombolEnkripsiActionPerformed

    private void hasildekripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasildekripsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hasildekripsiActionPerformed

    private void plainteksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plainteksActionPerformed
        // TODO add your handling code here 
    }//GEN-LAST:event_plainteksActionPerformed

    private void TombolCekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolCekActionPerformed
        // TODO add your handling code here:
        GetM();
    if (CekDeterminan(M)) {
    hasilkunci.setText("Matrix memiliki invers");
 } else {
    hasilkunci.setText("Matrix tidak memiliki invers");
 }
 if (CekDeterminan(M)) {
    enablebtn();
 } else {
    kontrolTbl();
 } 
    }//GEN-LAST:event_TombolCekActionPerformed

    private void HapusKunciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusKunciActionPerformed
        // TODO add your handling code here:     
    k1.setText("");  
    k2.setText("");
    k3.setText("");
    k4.setText("");
    hasilkunci.setText("");     
    }//GEN-LAST:event_HapusKunciActionPerformed

    private void TombolDekripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TombolDekripsiActionPerformed
        // TODO add your handling code here:
    setC();
    String Btr;
    Btr = plainteks.getText();
    enkrip(N, c);
    for (int z = 0; z < Btr.length(); z++) {
    f[z] = (char) ((p[z] % 26) + 65); // untuk huruf kecil
//menggunakn angka 97
 }
    String s = new String(f).trim();
    System.out.println("Hasil Dekrip menjadi string = "
    + s);
    hasildekripsi.setText(s);
    }//GEN-LAST:event_TombolDekripsiActionPerformed

    private void HapusTeksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusTeksActionPerformed
        // TODO add your handling code here:
    chipperteks.setText("");
    plainteks.setText("");
    hasildekripsi.setText("");
    }//GEN-LAST:event_HapusTeksActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void menuutamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuutamaActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Aereben a = new Aereben();
        a.setVisible(true);
    }//GEN-LAST:event_menuutamaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HillChipper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HillChipper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HillChipper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HillChipper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HillChipper().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Bit;
    private javax.swing.JLabel CekKunci;
    private javax.swing.JLabel ChipperTeks;
    private javax.swing.JLabel Dekripsi;
    private javax.swing.JButton Exit;
    private javax.swing.JButton HapusKunci;
    private javax.swing.JButton HapusTeks;
    private javax.swing.JLabel JumlahBit;
    private javax.swing.JLabel JumlahKarakter;
    private javax.swing.JLabel JumlahKata;
    private javax.swing.JLabel Karakter;
    private javax.swing.JLabel Kata;
    private javax.swing.JLabel PlainTeks;
    private javax.swing.JButton TombolCek;
    private javax.swing.JToggleButton TombolDekripsi;
    private javax.swing.JToggleButton TombolEnkripsi;
    private javax.swing.JTextField chipperteks;
    private javax.swing.JTextField hasildekripsi;
    private javax.swing.JLabel hasilkunci;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField k1;
    private javax.swing.JTextField k2;
    private javax.swing.JTextField k3;
    private javax.swing.JTextField k4;
    private javax.swing.JButton menuutama;
    private javax.swing.JTextField plainteks;
    // End of variables declaration//GEN-END:variables
}
